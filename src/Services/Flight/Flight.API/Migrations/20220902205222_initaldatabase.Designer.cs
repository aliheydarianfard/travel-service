// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using travel.Services.FlightAPI.Infrastructure;

#nullable disable

namespace Flight.API.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20220902205222_initaldatabase")]
    partial class initaldatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("flight_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("flightType_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("travel.Services.FlightAPI.Domain.AggregatesModel.FlightItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "flight_hilo");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Destination");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Source");

                    b.Property<decimal>("_discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Discount");

                    b.Property<string>("_flightNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("FlightNumber");

                    b.Property<int>("_flightTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FlightTypeId");

                    b.Property<decimal>("_markup")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Markup");

                    b.Property<int>("_minimumquantity")
                        .HasColumnType("int")
                        .HasColumnName("Minimumquantity");

                    b.Property<int>("_remain")
                        .HasColumnType("int")
                        .HasColumnName("Remain");

                    b.HasKey("Id");

                    b.HasIndex("_flightTypeId");

                    b.ToTable("FlightItem", "Flight");
                });

            modelBuilder.Entity("travel.Services.FlightAPI.Domain.AggregatesModel.FlightType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "flightType_hilo");

                    b.Property<string>("_desc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Desc");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("FlightType", "Flight");
                });

            modelBuilder.Entity("travel.Services.FlightAPI.Domain.AggregatesModel.FlightItem", b =>
                {
                    b.HasOne("travel.Services.FlightAPI.Domain.AggregatesModel.FlightType", "flightType")
                        .WithMany()
                        .HasForeignKey("_flightTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("flightType");
                });
#pragma warning restore 612, 618
        }
    }
}
